{"version":3,"sources":["webpack:///./resources/js/demo_component_gallery.js"],"names":["require","Vue","component","AppFramework","AppHeader","PostList","PostDisplay","PostCreate","CommentCreate","CommentDisplay","use","Vuex","store_defaults","state","user","course_summary","posts","currently_viewed_post","comments","actions","search","commit","this","getters","search_string","slice","filter_order","reverse","setAppMainPanelMode","payload","mode","post","createPost","author_user_name","created_at","editPost","post_id","body","pinPost","pinned","lockPost","locked","deletePost","endorseComment","comment_id","endorsed","muteComment","muted","addComment","store","Store","el","methods","get_sample_comment","$store"],"mappings":"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","file":"/js/demo_comp_gallery.js","sourcesContent":["import axios from 'axios'\n\nrequire('./bootstrap');\n\nimport Vue from 'vue';\n\nimport AppFramework from './components/AppFramework.vue';\nimport AppHeader from './components/AppHeader.vue';\nimport PostList from './components/PostList.vue';\nimport PostDisplay from './components/PostDisplay.vue';\nimport PostCreate from './components/PostCreate.vue';\nimport CommentCreate from './components/CommentCreate.vue';\nimport CommentDisplay from './components/CommentDisplay.vue'\n\nVue.component('app-framework', AppFramework);\nVue.component('app-header', AppHeader);\nVue.component('post-list', PostList);\nVue.component('post-display', PostDisplay);\nVue.component('post-create', PostCreate);\nVue.component('comment-create', CommentCreate);\nVue.component('comment-display', CommentDisplay)\n\nimport Vuex from 'vuex'\nVue.use(Vuex);\nimport store_defaults from './store';\n\n\n// Fill in some dummy data, since we don't want you to have to have a database or the real API running\nstore_defaults.state.user = {\n    \"name\": \"Tammy Teacher\",\n    \"email\": \"teacher@example.com\",\n    \"role\": \"teacher\", // 'teacher' or 'student'\n};\nstore_defaults.state.course_summary = {\n    \"id\":1,\n    \"name\":\"test course\",\n};\nstore_defaults.state.posts = [\n  {\n    \"id\":1,\n    \"author_user_name\":\"Theodore Teacher\",\n    \"author_anonymous\":false,\n    \"title\":\"post #1\",\n    \"body\":\"test body\",\n    \"pinned\":false,\n    \"locked\":false,\n    \"created_at\":\"2020-12-21T09:17:11.000000Z\",\n    \"num_comments\":17,\n    \"num_unread_comments\":2\n  },\n  {\n    \"id\":2,\n    \"author_user_name\":\"Tammy Teacher\",\n    \"author_anonymous\":false,\n    \"title\":\"post #2\",\n    \"body\":\"test body\",\n    \"pinned\":true,\n    \"locked\":false,\n    \"created_at\":\"2020-12-21T09:17:11.000000Z\",\n    \"num_comments\":18,\n    \"num_unread_comments\":2\n  },\n  {\n    \"id\":3,\n    \"author_user_name\":\"Tammy Teacher\",\n    \"author_anonymous\":false,\n    \"title\":\"post #3\",\n    \"body\":\"test body\",\n    \"pinned\":true,\n    \"locked\":false,\n    \"created_at\":\"2020-12-21T09:17:11.000000Z\",\n    \"num_comments\":18,\n    \"num_unread_comments\":2\n  }\n];\n\nstore_defaults.state.currently_viewed_post =\n    {\n        'id': 1,\n        \"author_user_name\":\"Tammy Teacher\",\n        \"author_anonymous\":false,\n        'author_user_role': 'teacher',\n        'title':'post #1',\n        'body':'test body',\n        'pinned':false,\n        'locked':false,\n        'created_at':\"2020-12-21T09:17:11.000000Z\",\n        comments: [\n            {\n                'id': 1,\n              \"author_user_name\":\"Tammy Teacher\",\n              \"author_anonymous\":false,\n                'author_user_role': 'teacher',\n                'muted_by_user_id': null,\n                'body': \"This is <b>Test Comment #1</b>\",\n                \"created_at\": \"2020-12-21T09:17:11.000000Z\",\n                'endorsed': true,\n                'parent_comment_id': null,\n                'is_unread': false,\n            },\n            {\n                'id': 2,\n              \"author_user_name\":\"Tammy Teacher\",\n              \"author_anonymous\":false,\n                'author_user_role': 'teacher',\n                'muted_by_user_id': null,\n                'body': \"This is <b>Test Comment #2</b>\",\n                \"created_at\": \"2020-12-21T09:17:11.000000Z\",\n                'endorsed': false,\n                'parent_comment_id': null,\n                'is_unread': true,\n            },\n            {\n              'id': 3,\n              \"author_user_name\":\"Sally Student\",\n              \"author_anonymous\":false,\n              'author_user_role': 'student',\n              'muted_by_user_id': null,\n              'body': \"This is <b>Child Comment #3</b>\",\n              \"created_at\": \"2020-12-21T09:18:11.000000Z\",\n              'endorsed': false,\n              'parent_comment_id': 2,\n              'is_unread': true,\n            },\n            {\n              'id': 4,\n              \"author_user_name\":\"Sally Student\",\n              \"author_anonymous\":false,\n              'author_user_role': 'student',\n              'muted_by_user_id': null,\n              'body': \"This is <b>Child Comment #4</b>\",\n              \"created_at\": \"2020-12-21T09:19:11.000000Z\",\n              'endorsed': false,\n              'parent_comment_id': 2,\n              'is_unread': true,\n            },\n            {\n              'id': 5,\n              \"author_user_name\":\"Sally Student\",\n              \"author_anonymous\":false,\n              'author_user_role': 'student',\n              'muted_by_user_id': null,\n              'body': \"This is <b>Grandchild Comment #5</b>\",\n              \"created_at\": \"2020-12-21T09:18:11.000000Z\",\n              'endorsed': false,\n              'parent_comment_id': 3,\n              'is_unread': true,\n            }\n        ]\n};\n\nstore_defaults.actions.search = function({commit}) {\n    let posts = this.getters.posts;\n    // search string exists?  exclude first post, to simulate server-side search\n    if (this.getters.search_string !== '') {\n      posts = posts.slice(1);\n    }\n    // filtering by other than newest?  reverse post order, to simulate server-side search\n    if (this.getters.filter_order !== 'newest') {\n      posts = [...posts].reverse();\n    }\n    commit('setFilteredPosts', {posts: posts});\n}\nstore_defaults.actions.setAppMainPanelMode = function({commit}, payload) {\n  commit('setAppMainPanelMode', {mode: payload.mode});\n  if (payload.mode === 'show_post') {\n    commit('setCurrentlyViewedPost', {post: this.getters.currently_viewed_post});\n  }\n}\nstore_defaults.actions.createPost = function({commit}, payload) {\n    // these are filled in from the API in the real app, so fake it here\n    payload.author_user_name = 'Current User';\n    payload.created_at = '2020-12-21T09:17:11.000000Z';\n    commit('addPost', payload);\n  };\nstore_defaults.actions.editPost = function({commit}, payload) {\n    commit('editPost', {post_id: payload.post_id, body: payload.body});\n  };\nstore_defaults.actions.pinPost = function({commit}, payload) {\n    commit('pinPost', {post_id:payload.post_id, pinned:payload.pinned});\n  };\nstore_defaults.actions.lockPost = function({commit}, payload) {\n    commit('lockPost', {post_id: payload.post_id, locked: payload.locked});\n  };\nstore_defaults.actions.deletePost = function({commit}, payload) {\n    commit('deletePost', {post_id: payload.post_id});\n  };\nstore_defaults.actions.endorseComment = function({commit}, payload) {\n    commit('endorseComment', {comment_id:payload.comment_id, endorsed: payload.endorsed});\n  };\nstore_defaults.actions.muteComment = function({commit}, payload) {\n    commit('muteComment', {comment_id: payload.comment_id, muted: payload.muted});\n  };\nstore_defaults.actions.addComment = function({commit}, payload) {\n    // these are filled in from the API in the real app, so fake it here\n    payload.author_user_name = 'Current User';\n    payload.created_at = '2020-12-21T09:17:11.000000Z';\n    commit('addComment', payload);\n};\n\nlet store = new Vuex.Store(store_defaults);\n\nnew Vue({\n    el: '#app',\n    store: store,\n    methods: {\n        get_sample_comment: function() {\n            return this.$store.getters.currently_viewed_post.comments[0];\n        }\n    }\n})\n"],"sourceRoot":""}